{
  "Query Handler": {
    "prefix": "qhandler",
    "body": [
      "public class Query : IRequest<${1:ReturnObject}>{}",
      "        public class Handler : IRequestHandler<Query, ${1:ReturnObject}>",
      "        {",
      "        private DataContext _context;",
      "",
      "        public Handler(DataContext context)",
      "          {",
      "            _context = context;",
      "          }",
      "",
      "          public async Task<${1:ReturnObject}> Handle(Query request, CancellationToken cancellationToken)",
      "          {",
      "              // handler logic here",
      "              ${2:var }",
      "          }",
      "        }"
    ],
    "description": "Query Handler"
  },
  "Command Handler": {
    "prefix": "chandler",
    "body": [
      "public class Command : IRequest",
      "    {",
      "      ${1:entity structure}",
      "    }",
      "",
      "    public class Handler : IRequestHandler<Command>",
      "    {",
      "      private readonly DataContext _context;",
      "      public Handler(DataContext context)",
      "      {",
      "        _context = context;",
      "      }",
      "",
      "      public async Task<Unit> Handle(Command request, CancellationToken cancellationToken)",
      "      {",
      "        ${2:handler logic}",
      "        var success = await _context.SaveChangesAsync() > 0;",
      "",
      "        // When API controller receives Unit.Value, it will send the 200 response",
      "        // Unit.Value is just a dummy message",
      "        if (success) return Unit.Value;",
      "",
      "        throw new Exception(\"Problem saving changes\");",
      "      }",
      "    }"
    ],
    "description": "Command Handler"
  }
}
